name: Windows 10 21H2 Virtual Workspace

on:
  workflow_dispatch:

jobs:
  run-vm:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🧩 Initializing Environment
        run: |
          echo "🔧 Preparing Your Virtual Workspace (4 Cores • 16 GB RAM • 256 GB SSD)"
          sudo apt update -qq
          sudo apt install -y qemu-system qemu-utils wget curl unzip
          mkdir -p $HOME/vm
          echo "✅ Environment initialized and ready."

      - name: 💾 Downloading Windows 10 21H2 ISO
        run: |
          echo "📦 Downloading Windows 10 21H2 ISO..."
          cd $HOME/vm
          wget -O win10.iso "https://archive.org/download/Win10_21H2_English_x64/Win10_21H2_English_x64.iso"
          ls -lh win10.iso
          echo "✅ Windows 10 21H2 ISO downloaded successfully."

      - name: 💽 Creating 256 GB Virtual Disk
        run: |
          echo "💽 Setting up 256 GB virtual drive..."
          cd $HOME/vm
          qemu-img create -f qcow2 win10.qcow2 256G
          ls -lh win10.qcow2
          echo "✅ Virtual disk created."

      - name: 🌐 Setting Up Tailscale (Secure Access)
        run: |
          echo "🔐 Installing and configuring Tailscale..."
          curl -fsSL https://tailscale.com/install.sh | sh
          echo "🔗 Starting Tailscale login (follow the link below to authenticate)..."
          sudo tailscale up --hostname=github-vm --accept-routes --ssh
          sudo tailscale status
          echo "✅ Tailscale setup complete."

      - name: 🖥️ Launching Windows 10 VM
        run: |
          echo "🚀 Starting Windows 10 21H2 Virtual Machine..."
          cd $HOME/vm
          echo "💡 Using full KVM acceleration."
          nohup sudo qemu-system-x86_64 \
            -enable-kvm \
            -cpu host,kvm=on \
            -m 16G \
            -smp 4,sockets=1,cores=4,threads=1 \
            -drive file=win10.qcow2,format=qcow2,if=ide \
            -cdrom win10.iso \
            -vga qxl \
            -display vnc=:1 \
            -device qemu-xhci,id=xhci \
            -device usb-tablet,bus=xhci.0 \
            -netdev user,id=n0,hostfwd=tcp::3389-:3389 \
            -device e1000,netdev=n0 \
            -daemonize
          echo "✅ Windows 10 VM is running successfully."
          echo "🌐 RDP port forwarded (3389) • VNC available (:1)."
          echo "🔍 QEMU process list:"
          ps aux | grep qemu

      - name: ⏳ Keeping VM Active for 6 Hours
        run: |
          echo "🕐 Keeping your virtual workspace alive for 6 hours..."
          for i in $(seq 1 360); do
            printf "\r⏳ Runtime: %02d / 360 minutes elapsed" "$i"
            sleep 60
          done
          echo -e "\n💤 Session complete — shutting down."
